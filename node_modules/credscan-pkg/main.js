const path = require('path');
const config = require('./config.json');
var edge = require('edge-js');
var core = require('@actions/core');

var version = 'coreapp'
var namespace = 'CredScanSrc'

const baseNetAppPath = path.join(__dirname, '/src/' + namespace + '/bin/Debug/net' + version + '2.0');

process.env.EDGE_USE_CORECLR = 1;
if (version !== 'standard')
    process.env.EDGE_APP_ROOT = baseNetAppPath;

var baseDll = path.join(baseNetAppPath, namespace + '.dll');
var localTypeName = namespace + '.LocalMethods';

var credScanFunction = edge.func({
    assemblyFile: baseDll,
    typeName: localTypeName,
    methodName: 'Invoke'
});

async function credscan(input, scannedResult) {
    if (!config.credScanEnable) return;
    if (process.env.RUNNER_OS == 'macOS') {
        console.log("The CredScan is not supported on MacOS. Please use Linux or Windows.");
        return;
    }
    return credScanFunction(input, function(error, result) {
        if (error) throw error;
        if (input.toString() !== result.toString()) {
            core.warning('Credentials were found.');
        }
        scannedResult.result = result
        return result;
    })
}

async function credscan_no_warning(input, scannedResult) {
    if (!config.credScanEnable) return;
    if (process.env.RUNNER_OS == 'macOS') {
        console.log("The CredScan is not supported on MacOS. Please use Linux or Windows.");
        return;
    }
    return credScanFunction(input, function(error, result) {
        if (error) throw error;
        scannedResult.result = result
        return result;
    })
}


module.exports = { credscan, credscan_no_warning };